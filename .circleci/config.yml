version: 2.1
orb-version: 1.0.1
description: An orb for notifiying Microsoft Teams of build statuses implemented in pure Bash.

orbs:
  status_to_ms_teams: bluemarblepayroll/status_to_ms_teams_pure_bash@1.0.1
jobs:
  build:
    docker:
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout # check out the code in the project directory
      - run: echo "hello world" # run the `echo` command
      - run: npm install # run the `echo` command
      - status_to_ms_teams/report:
          webhook_url: https://usthaan715.webhook.office.com/webhookb2/216c2a55-0aa5-4121-b3c2-df0afe704437@cdfad6cb-99df-4451-ac6b-8cb2eca5058c/IncomingWebhook/54dae55e2c9d4729819d10e95cfe152a/039b64f3-af48-4160-bc30-f202ba06c0b1
  test:
    docker:
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: npm test # run the `echo` command
      - status_to_ms_teams/report:
          webhook_url: https://usthaan715.webhook.office.com/webhookb2/216c2a55-0aa5-4121-b3c2-df0afe704437@cdfad6cb-99df-4451-ac6b-8cb2eca5058c/IncomingWebhook/54dae55e2c9d4729819d10e95cfe152a/039b64f3-af48-4160-bc30-f202ba06c0b1
commands:
  report:
    parameters:
      webhook_url:
        description: The MS Teams Webhook URL.
        type: string
    steps:
      - run:
          name: status_to_ms_teams_pure_bash/Initialization
          when: always
          command: |
            # The cut command removes the SHA1. Also double quotes need to
            # be escaped as the message will be used later in a JSON document.
            git log --format=oneline -n 1 $CIRCLE_SHA1 | cut -d' ' -f2- | sed 's/"/\\"/g' \
              > /tmp/last_git_msg

            SHORT_SHA1=`echo -n $CIRCLE_SHA1 | head -c 7`

            if [ `echo "$CIRCLE_REPOSITORY_URL" | grep "^git@github.com"` ]; then
              COMMIT_LINK=\[$SHORT_SHA1\]\(https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1\)
              AVATAR_URL=https://github.com/${CIRCLE_USERNAME}.png
            elif [ `echo "$CIRCLE_REPOSITORY_URL" | grep "^git@bitbucket.org"` ]; then
              COMMIT_LINK=\[$SHORT_SHA1\]\(https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1\)
              AVATAR_URL=https://bitbucket.org/account/$CIRCLE_USERNAME/avatar
            else
              >&2 echo unknown version control system: $CIRCLE_REPOSITORY_URL
              fail
            fi

            # Note that the "\<<" in the heredoc declaration is escaped from
            # CircleCI's parameters syntax.
            MS_TEAMS_MSG_TEMPLATE=$(cat \<<END_HEREDOC
            {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": "__theme_color__",
              "summary": "CircleCI Build Notification",
              "sections": [
                {
                  "activityTitle": "__build_status__: ${CIRCLE_USERNAME}'s [$CIRCLE_PROJECT_REPONAME $CIRCLE_JOB #${CIRCLE_BUILD_NUM}]($CIRCLE_BUILD_URL)",
                  "activityImage": "$AVATAR_URL",
                  "facts": [
                    {
                      "name": "Branch",
                      "value": "$CIRCLE_BRANCH"
                    },
                    {
                      "name": "Commit Message",
                      "value": "`cat /tmp/last_git_msg`"
                    },
                    {
                      "name": "Commit",
                      "value": "$COMMIT_LINK"
                    }
                  ],
                  "markdown": true
                }
              ]
            }
            END_HEREDOC
            )
            echo "$MS_TEAMS_MSG_TEMPLATE" > /tmp/ms_teams_message

      - run:
          name: Report Build Success
          command: |
            MSG_PATH=/tmp/ms_teams_success_message
            sed -e 's/__build_status__/Success/' -e 's/__theme_color__/0076D7/' \
                /tmp/ms_teams_message > $MSG_PATH
            curl --fail -H "Content-Type: application/json" \
                  --data-binary @$MSG_PATH \
                  << parameters.webhook_url >>
          when: on_success

      - run:
          name: Report Build Failure
          command: |
            MSG_PATH=/tmp/ms_teams_failure_message
            sed -e 's/__build_status__/Failure/' -e 's/__theme_color__/e2091d/' \
                /tmp/ms_teams_message > $MSG_PATH
            curl --fail -H "Content-Type: application/json" \
                  --data-binary @$MSG_PATH \
                  << parameters.webhook_url >>
          when: on_fail